paths:
  /api/products/:
    get:
      summary: Get all products
      description: Get all products from database
      tags: [Products]
      responses:
        200:
          description: Products found successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        500:
          description: Internal server error.
    post:
      summary: Create a new product
      description: Create a new product in database
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Product created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        400:
          description: Bad request.
  /api/products/{pid}:
    get:
      summary: Get only one product by id
      description: Get a specific product from database
      tags: [Products]
      parameters:
        - in: path
          name: pid
          schema:
            type: string
            example: "664fca3d53956f8aaa88e4f4"
          required: true
          description: The product ID
      responses:
        200:
          description: Product found successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        404:
          description: Product not found.
    put:
      summary: Update a product
      description: Update a product in database
      tags: [Products]
      parameters:
        - in: path
          name: pid
          schema:
            type: string
            example: "664fca3d53956f8aaa88e4f4"
          required: true
          description: The product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        400:
          description: Bad request.
    delete:
      summary: Delete a product
      description: Delete a product from database
      tags: [Products]
      parameters:
        - in: path
          name: pid
          schema:
            type: string
            example: "664fca3d53956f8aaa88e4f4"
          required: true
          description: The product ID
      responses:
        200:
          description: Product deleted successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        400:
          description: Bad request.

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: The id of the product autogenerated by the database
        title:
          type: string
          description: The title of the product
        description:
          type: string
          description: The description of the product
        price:
          type: number
          description: The price of the product
        thumbnail:
          type: string
          description: The thumbnail of the product
        code:
          type: string
          description: The code of the product
        stock:
          type: number
          description: The stock of the product
        status:
          type: boolean
          description: The status of the product
        owner:
          type: string
          description: The owner of the product
      example:
        _id: 1
        title: "Product 1"
        description: "This is the first product"
        price: 100
        thumbnail: "https://example.com/image.jpg"
        code: "ABC123"
        stock: 10
        status: true
        owner: "123456789"
